name: Test
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions: {}
jobs:
  pre-job:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      should_run_i18n: ${{ steps.found_paths.outputs.i18n == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_web: ${{ steps.found_paths.outputs.web == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_server: ${{ steps.found_paths.outputs.server == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_cli: ${{ steps.found_paths.outputs.cli == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_e2e: ${{ steps.found_paths.outputs.e2e == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_mobile: ${{ steps.found_paths.outputs.mobile == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_ml: ${{ steps.found_paths.outputs.machine-learning == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_e2e_web: ${{ steps.found_paths.outputs.e2e == 'true' || steps.found_paths.outputs.web == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_e2e_server_cli: ${{ steps.found_paths.outputs.e2e == 'true' || steps.found_paths.outputs.server == 'true' || steps.found_paths.outputs.cli == 'true' || steps.should_force.outputs.should_force == 'true' }}
      should_run_.github: ${{ steps.found_paths.outputs['.github'] == 'true' || steps.should_force.outputs.should_force == 'true' }} # redundant to have should_force but if someone changes the trigger then this won't have to be changed
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - id: found_paths
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        with:
          filters: |
            i18n:
              - 'i18n/**'
            web:
              - 'web/**'
              - 'i18n/**'
              - 'open-api/typescript-sdk/**'
            server:
              - 'server/**'
            cli:
              - 'cli/**'
              - 'open-api/typescript-sdk/**'
            e2e:
              - 'e2e/**'
            mobile:
              - 'mobile/**'
            machine-learning:
              - 'machine-learning/**'
            workflow:
              - '.github/workflows/test.yml'
            .github:
              - '.github/**'
      - name: Check if we should force jobs to run
        id: should_force
        run: echo "should_force=${{ steps.found_paths.outputs.workflow == 'true' || github.event_name == 'workflow_dispatch' }}" >> "$GITHUB_OUTPUT"
  server-unit-tests:
    name: Test & Lint Server
    needs: pre-job
    if: ${{ needs.pre-job.outputs.should_run_server == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - name: Run package manager install
        run: mise run server:install
      - name: Run linter
        run: mise run server:lint
        if: ${{ !cancelled() }}
      - name: Run formatter
        run: mise run server:format
        if: ${{ !cancelled() }}
      - name: Run tsc
        run: mise run server:check
        if: ${{ !cancelled() }}
      - name: Run small tests & coverage
        run: mise run server:test
        if: ${{ !cancelled() }}
  cli-unit-tests:
    name: Unit Test CLI
    needs: pre-job
    if: ${{ needs.pre-job.outputs.should_run_cli == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ./cli
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - name: Setup typescript-sdk
        run: mise run sdk:install && mise run sdk:build
      - name: Install deps
        run: mise run cli:install
      - name: Run linter
        run: mise run cli:lint
        if: ${{ !cancelled() }}
      - name: Run formatter
        run: mise run cli:format
        if: ${{ !cancelled() }}
      - name: Run tsc
        run: mise run cli:check
        if: ${{ !cancelled() }}
      - name: Run unit tests & coverage
        run: mise run cli:test
        if: ${{ !cancelled() }}
  cli-unit-tests-win:
    name: Unit Test CLI (Windows)
    needs: pre-job
    if: ${{ needs.pre-job.outputs.should_run_cli == 'true' }}
    runs-on: windows-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ./cli
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - name: Setup typescript-sdk
        run: mise run sdk:install && mise run sdk:build
      - name: Install deps
        run: mise run cli:install
      # Skip linter & formatter in Windows test.
      - name: Run tsc
        run: mise run cli:check
        if: ${{ !cancelled() }}
      - name: Run unit tests & coverage
        run: mise run cli:test
        if: ${{ !cancelled() }}
  web-lint:
    name: Lint Web
    needs: pre-job
    if: ${{ needs.pre-job.outputs.should_run_web == 'true' }}
    runs-on: mich
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - name: Run setup typescript-sdk
        run: mise run sdk:install && mise run sdk:build
      - name: Run install
        run: mise run web:install
      - name: Run linter
        run: mise run web:lint-p
        if: ${{ !cancelled() }}
      - name: Run formatter
        run: mise run web:format
        if: ${{ !cancelled() }}
      - name: Run svelte checks
        run: mise run web:check-svelte
        if: ${{ !cancelled() }}
  web-unit-tests:
    name: Test Web
    needs: pre-job
    if: ${{ needs.pre-job.outputs.should_run_web == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - name: Run setup typescript-sdk
        run: mise run sdk:install && mise run sdk:build
      - name: Run npm install
        run: mise run web:install
      - name: Run tsc
        run: mise run web:check
        if: ${{ !cancelled() }}
      - name: Run unit tests & coverage
        run: mise run web:test
        if: ${{ !cancelled() }}
  i18n-tests:
    name: Test i18n
    needs: pre-job
    if: ${{ needs.pre-job.outputs.should_run_i18n == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - name: Install dependencies
        run: mise run web:install
      - name: Format
        run: mise run i18n:format-fix
      - name: Find file changes
        uses: tj-actions/verify-changed-files@a1c6acee9df209257a246f2cc6ae8cb6581c1edf # v20.0.4
        id: verify-changed-files
        with:
          files: |
            i18n/**
      - name: Verify files have not changed
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.verify-changed-files.outputs.changed_files }}
        run: |
          echo "ERROR: i18n files not up to date!"
          echo "Changed files: ${CHANGED_FILES}"
          exit 1
  e2e-tests-lint:
    name: End-to-End Lint
    needs: pre-job
    if: ${{ needs.pre-job.outputs.should_run_e2e == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ./e2e
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - name: Run setup typescript-sdk
        run: mise run sdk:install && mise run sdk:build
        if: ${{ !cancelled() }}
      - name: Install dependencies
        run: mise run e2e:install
        if: ${{ !cancelled() }}
      - name: Run linter
        run: mise run e2e:lint
        if: ${{ !cancelled() }}
      - name: Run formatter
        run: mise run e2e:format
        if: ${{ !cancelled() }}
      - name: Run tsc
        run: mise run e2e:check
        if: ${{ !cancelled() }}
  server-medium-tests:
    name: Medium Tests (Server)
    needs: pre-job
    if: ${{ needs.pre-job.outputs.should_run_server == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - name: Run install
        run: SHARP_IGNORE_GLOBAL_LIBVIPS=true mise run server:install
      - name: Run medium tests
        run: mise run server:test-medium
        if: ${{ !cancelled() }}
  e2e-tests-server-cli:
    name: End-to-End Tests (Server & CLI)
    needs: pre-job
    if: ${{ needs.pre-job.outputs.should_run_e2e_server_cli == 'true' }}
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
    strategy:
      matrix:
        runner: [ubuntu-latest, ubuntu-24.04-arm]
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
          submodules: 'recursive'
      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - name: Run setup typescript-sdk
        run: mise run sdk:install && mise run sdk:build
        if: ${{ !cancelled() }}
      - name: Run setup web
        run: mise run web:install && mise run web:svelte-kit-sync
        if: ${{ !cancelled() }}
      - name: Run setup cli
        run: mise run cli:install && mise run cli:build
        if: ${{ !cancelled() }}
      - name: Install dependencies
        run: mise run e2e:install
        if: ${{ !cancelled() }}
      - name: Docker build
        run: docker compose build -f e2e/docker-compose.yml
        if: ${{ !cancelled() }}
      - name: Run e2e tests (api & cli)
        run: mise run e2e:test
        if: ${{ !cancelled() }}
  e2e-tests-web:
    name: End-to-End Tests (Web)
    needs: pre-job
    if: ${{ needs.pre-job.outputs.should_run_e2e_web == 'true' }}
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
    strategy:
      matrix:
        runner: [ubuntu-latest, ubuntu-24.04-arm]
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
          submodules: 'recursive'
      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - name: Run setup typescript-sdk
        run: mise run sdk:install && mise run sdk:build
        if: ${{ !cancelled() }}
      - name: Run setup web
        run: mise run web:install && mise run web:svelte-kit-sync
        if: ${{ !cancelled() }}
      - name: Run setup cli
        run: mise run cli:install && mise run cli:build
        if: ${{ !cancelled() }}
      - name: Install Playwright Browsers
        run: npx playwright install chromium --only-shell
        if: ${{ !cancelled() }}
      - name: Docker build
        run: docker compose build -f e2e/docker-compose.yml
        if: ${{ !cancelled() }}
      - name: Run e2e tests (web)
        run: mise run e2e:test-web
        if: ${{ !cancelled() }}
  success-check-e2e:
    name: End-to-End Tests Success
    needs: [e2e-tests-server-cli, e2e-tests-web]
    permissions: {}
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: immich-app/devtools/actions/success-check@68f10eb389bb02a3cf9d1156111964c549eb421b # 0.0.4
        with:
          needs: ${{ toJSON(needs) }}
  mobile-unit-tests:
    name: Unit Test Mobile
    needs: pre-job
    if: ${{ needs.pre-job.outputs.should_run_mobile == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@fd55f4c5af5b953cc57a2be44cb082c8f6635e8e # v2.21.0
        with:
          channel: 'stable'
          flutter-version-file: ./mobile/pubspec.yaml
      - name: Generate translation file
        run: dart run easy_localization:generate -S ../i18n && dart run bin/generate_keys.dart
        working-directory: ./mobile
      - name: Run tests
        working-directory: ./mobile
        run: flutter test -j 1
  ml-unit-tests:
    name: Unit Test ML
    needs: pre-job
    if: ${{ needs.pre-job.outputs.should_run_ml == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ./machine-learning
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Install uv
        uses: astral-sh/setup-uv@d4b2f3b6ecc6e67c4457f6d3e41ec42d3d0fcb86 # v5.4.2
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        # TODO: add caching when supported (https://github.com/actions/setup-python/pull/818)
        # with:
        #   python-version: 3.11
        #   cache: 'uv'
      - name: Install dependencies
        run: |
          uv sync --extra cpu
      - name: Lint with ruff
        run: |
          uv run ruff check --output-format=github immich_ml
      - name: Check black formatting
        run: |
          uv run black --check immich_ml
      - name: Run mypy type checking
        run: |
          uv run mypy --strict immich_ml/
      - name: Run tests and coverage
        run: |
          uv run pytest --cov=immich_ml --cov-report term-missing
  github-files-formatting:
    name: .github Files Formatting
    needs: pre-job
    if: ${{ needs.pre-job.outputs['should_run_.github'] == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ./.github
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - name: Run install
        run: mise run github:install
      - name: Run formatter
        run: mise run github:format
        if: ${{ !cancelled() }}
  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@00cae500b08a931fb5698e11e79bfbd38e612a38 # 2.0.0
        with:
          ignore_paths: >-
            **/open-api/** **/openapi** **/node_modules/**
  generated-api-up-to-date:
    name: OpenAPI Clients
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - name: Install server dependencies
        run: SHARP_IGNORE_GLOBAL_LIBVIPS=true mise run server:install
      - name: Build the app
        run: mise run server:build
      - name: Run API generation
        run: ./bin/generate-open-api.sh
        working-directory: open-api
      - name: Find file changes
        uses: tj-actions/verify-changed-files@a1c6acee9df209257a246f2cc6ae8cb6581c1edf # v20.0.4
        id: verify-changed-files
        with:
          files: |
            mobile/openapi
            open-api/typescript-sdk
            open-api/immich-openapi-specs.json
      - name: Verify files have not changed
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.verify-changed-files.outputs.changed_files }}
        run: |
          echo "ERROR: Generated files not up to date!"
          echo "Changed files: ${CHANGED_FILES}"
          exit 1
  sql-schema-up-to-date:
    name: SQL Schema Checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
    services:
      postgres:
        image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3@sha256:ec713143dca1a426eba2e03707c319e2ec3cc9d304ef767f777f8e297dee820c
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: immich
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          persist-credentials: false
      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
      - name: Install server dependencies
        run: SHARP_IGNORE_GLOBAL_LIBVIPS=true pnpm install --frozen-lockfile
      - name: Build the app
        run: mise run server:build
      - name: Run existing migrations
        run: mise run server:migrations run
      - name: Test npm run schema:reset command works
        run: mise run server:schema-reset
      - name: Generate new migrations
        continue-on-error: true
        run: mise run server:migrations generate src/TestMigration
      - name: Find file changes
        uses: tj-actions/verify-changed-files@a1c6acee9df209257a246f2cc6ae8cb6581c1edf # v20.0.4
        id: verify-changed-files
        with:
          files: |
            server/src
      - name: Verify migration files have not changed
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.verify-changed-files.outputs.changed_files }}
        run: |
          echo "ERROR: Generated migration files not up to date!"
          echo "Changed files: ${CHANGED_FILES}"
          cat ./src/*-TestMigration.ts
          exit 1
      - name: Run SQL generation
        run: mise run server:sql
        env:
          DB_URL: postgres://postgres:postgres@localhost:5432/immich
      - name: Find file changes
        uses: tj-actions/verify-changed-files@a1c6acee9df209257a246f2cc6ae8cb6581c1edf # v20.0.4
        id: verify-changed-sql-files
        with:
          files: |
            server/src/queries
      - name: Verify SQL files have not changed
        if: steps.verify-changed-sql-files.outputs.files_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.verify-changed-sql-files.outputs.changed_files }}
        run: |
          echo "ERROR: Generated SQL files not up to date!"
          echo "Changed files: ${CHANGED_FILES}"
          git diff
          exit 1

# mobile-integration-tests:
#   name: Run mobile end-to-end integration tests
#   runs-on: macos-latest
#   steps:
#     - uses: actions/checkout@v4
#     - uses: actions/setup-java@v3
#       with:
#         distribution: 'zulu'
#         java-version: '12.x'
#         cache: 'gradle'
#     - name: Cache android SDK
#       uses: actions/cache@v3
#       id: android-sdk
#       with:
#         key: android-sdk
#         path: |
#           /usr/local/lib/android/
#           ~/.android
#     - name: Cache Gradle
#       uses: actions/cache@v3
#       with:
#         path: |
#           ./mobile/build/
#           ./mobile/android/.gradle/
#         key: ${{ runner.os }}-flutter-${{ hashFiles('**/*.gradle*', 'pubspec.lock') }}
#     - name: Setup Android SDK
#       if: steps.android-sdk.outputs.cache-hit != 'true'
#       uses: android-actions/setup-android@v2
#     - name: AVD cache
#       uses: actions/cache@v3
#       id: avd-cache
#       with:
#         path: |
#           ~/.android/avd/*
#           ~/.android/adb*
#         key: avd-29
#     - name: create AVD and generate snapshot for caching
#       if: steps.avd-cache.outputs.cache-hit != 'true'
#       uses: reactivecircus/android-emulator-runner@v2.27.0
#       with:
#         working-directory: ./mobile
#         cores: 2
#         api-level: 29
#         arch: x86_64
#         profile: pixel
#         target: default
#         force-avd-creation: false
#         emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#         disable-animations: false
#         script: echo "Generated AVD snapshot for caching."
#     - name: Setup Flutter SDK
#       uses: subosito/flutter-action@v2
#       with:
#         channel: 'stable'
#         flutter-version: '3.7.3'
#         cache: true
#     - name: Run integration tests
#       uses: Wandalen/wretry.action@master
#       with:
#         action: reactivecircus/android-emulator-runner@v2.27.0
#         with: |
#           working-directory: ./mobile
#           cores: 2
#           api-level: 29
#           arch: x86_64
#           profile: pixel
#           target: default
#           force-avd-creation: false
#           emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#           disable-animations: true
#           script: |
#             flutter pub get
#             flutter test integration_test
#         attempt_limit: 3
